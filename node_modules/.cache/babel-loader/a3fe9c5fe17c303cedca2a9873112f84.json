{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/A-Labs/Code Project/Web/candy-machine-v2-responsive-ui/src/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport confetti from \"canvas-confetti\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport Countdown from \"react-countdown\";\nimport { Snackbar, Paper, LinearProgress, Chip } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { toDate, getAtaForMint } from './utils';\nimport { MintButton } from './MintButton';\nimport { awaitTransactionSignatureConfirmation, getCandyMachineState, mintOneToken, CANDY_MACHINE_PROGRAM } from \"./candy-machine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cluster = process.env.REACT_APP_SOLANA_NETWORK.toString();\nconst decimals = process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS ? +process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS.toString() : 9;\nconst splTokenName = process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME ? process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME.toString() : \"TOKEN\";\nconst WalletContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c = WalletContainer;\nconst WalletAmount = styled.div`\n  color: black;\n  width: auto;\n  padding: 5px 5px 5px 16px;\n  min-width: 48px;\n  min-height: auto;\n  border-radius: 22px;\n  background-color: var(--main-text-color);\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\n  box-sizing: border-box;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  font-weight: 500;\n  line-height: 1.75;\n  text-transform: uppercase;\n  border: 0;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  vertical-align: middle;\n  justify-content: flex-start;\n  gap: 10px;\n`;\n_c2 = WalletAmount;\nconst Wallet = styled.ul`\n  flex: 0 0 auto;\n  margin: 0;\n  padding: 0;\n`;\n_c3 = Wallet;\nconst ConnectButton = styled(WalletMultiButton)`\n  border-radius: 18px !important;\n  padding: 6px 16px;\n  background-color: #4E44CE;\n  margin: 0 auto;\n`;\n_c4 = ConnectButton;\nconst NFT = styled(Paper)`\n  min-width: 400px;\n  padding: 5px 20px 20px 20px;\n  flex: 1 1 auto;\n  background-color: var(--card-background-color) !important;\n\n`;\n_c5 = NFT;\nconst Des = styled(NFT)`\n  text-align: left;\n  padding-top: 0px;\n`;\n_c6 = Des;\nconst Card = styled(Paper)`\n  display: inline-block;\n  background-color: var(--card-background-lighter-color) !important;\n  margin: 5px;\n  padding: 24px;\n`;\n_c7 = Card;\nconst MintButtonContainer = styled.div`\n  button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\n    color: #464646;\n  }\n\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\n    -webkit-animation: pulse 1s;\n    animation: pulse 1s;\n    box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\n  }\n\n  @-webkit-keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n`;\n_c8 = MintButtonContainer;\nconst Logo = styled.div`\n  flex: 0 0 auto;\n\n  img {\n    height: 60px;\n  }\n`;\n_c9 = Logo;\nconst Menu = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  flex: 1 0 auto;\n\n  li {\n    margin: 0 12px;\n\n    a {\n      color: var(--main-text-color);\n      list-style-image: none;\n      list-style-position: outside;\n      list-style-type: none;\n      outline: none;\n      text-decoration: none;\n      text-size-adjust: 100%;\n      touch-action: manipulation;\n      transition: color 0.3s;\n      padding-bottom: 15px;\n\n      img {\n        max-height: 26px;\n      }\n    }\n\n    a:hover, a:active {\n      color: rgb(131, 146, 161);\n      border-bottom: 4px solid var(--title-text-color);\n    }\n\n  }\n`;\n_c10 = Menu;\nconst SolExplorerLink = styled.a`\n  color: var(--title-text-color);\n  border-bottom: 1px solid var(--title-text-color);\n  font-weight: bold;\n  list-style-image: none;\n  list-style-position: outside;\n  list-style-type: none;\n  outline: none;\n  text-decoration: none;\n  text-size-adjust: 100%;\n\n  :hover {\n    border-bottom: 2px solid var(--title-text-color);\n  }\n`;\n_c11 = SolExplorerLink;\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-right: 4%;\n  margin-left: 4%;\n  text-align: center;\n  justify-content: center;\n`;\n_c12 = MainContainer;\nconst MintContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n_c13 = MintContainer;\nconst DesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 20px;\n`;\n_c14 = DesContainer;\nconst Price = styled(Chip)`\n  position: absolute;\n  margin: 5px;\n  font-weight: bold;\n  font-size: 1em !important;\n`;\n_c15 = Price;\nconst Image = styled.img`\n  height: 400px;\n  width: auto;\n  border-radius: 7px;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n`;\n_c16 = Image;\nconst BorderLinearProgress = styled(LinearProgress)`\n  margin: 20px 0;\n  height: 10px !important;\n  border-radius: 30px;\n  border: 2px solid white;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n  background-color:var(--main-text-color) !important;\n  \n  > div.MuiLinearProgress-barColorPrimary{\n    background-color:var(--title-text-color) !important;\n  }\n\n  > div.MuiLinearProgress-bar1Determinate {\n    border-radius: 30px !important;\n    background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\n  }\n`;\n_c17 = BorderLinearProgress;\nconst ShimmerTitle = styled.h1`\n  margin: 50px auto;\n  text-transform: uppercase;\n  animation: glow 2s ease-in-out infinite alternate;\n  color: var(--main-text-color);\n  @keyframes glow {\n    from {\n      text-shadow: 0 0 20px var(--main-text-color);\n    }\n    to {\n      text-shadow: 0 0 30px var(--title-text-color), 0 0 10px var(--title-text-color);\n    }\n  }\n`;\n_c18 = ShimmerTitle;\nconst GoldTitle = styled.h2`\n  color: var(--title-text-color);\n`;\n_c19 = GoldTitle;\nconst LogoAligner = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    max-height: 35px;\n    margin-right: 10px;\n  }\n`;\n_c20 = LogoAligner;\n\nconst Home = props => {\n  _s();\n\n  var _candyMachine$state, _candyMachine$state$g;\n\n  const [balance, setBalance] = useState();\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [isActive, setIsActive] = useState(false); // true when countdown completes or whitelisted\n\n  const [solanaExplorerLink, setSolanaExplorerLink] = useState(\"\");\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [isSoldOut, setIsSoldOut] = useState(false);\n  const [payWithSplToken, setPayWithSplToken] = useState(false);\n  const [price, setPrice] = useState(0);\n  const [priceLabel, setPriceLabel] = useState(\"SOL\");\n  const [whitelistPrice, setWhitelistPrice] = useState(0);\n  const [whitelistEnabled, setWhitelistEnabled] = useState(false);\n  const [whitelistTokenBalance, setWhitelistTokenBalance] = useState(0);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    severity: undefined\n  });\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState();\n  const rpcUrl = props.rpcHost;\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n      const cndy = await getCandyMachineState(wallet, props.candyMachineId, props.connection);\n      setCandyMachine(cndy);\n      setItemsAvailable(cndy.state.itemsAvailable);\n      setItemsRemaining(cndy.state.itemsRemaining);\n      setItemsRedeemed(cndy.state.itemsRedeemed);\n      var divider = 1;\n\n      if (decimals) {\n        divider = +('1' + new Array(decimals).join('0').slice() + '0');\n      } // detect if using spl-token to mint\n\n\n      if (cndy.state.tokenMint) {\n        setPayWithSplToken(true); // Customize your SPL-TOKEN Label HERE\n        // TODO: get spl-token metadata name\n\n        setPriceLabel(splTokenName);\n        setPrice(cndy.state.price.toNumber() / divider);\n        setWhitelistPrice(cndy.state.price.toNumber() / divider);\n      } else {\n        setPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n        setWhitelistPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n      } // fetch whitelist token balance\n\n\n      if (cndy.state.whitelistMintSettings) {\n        setWhitelistEnabled(true);\n\n        if (cndy.state.whitelistMintSettings.discountPrice !== null && cndy.state.whitelistMintSettings.discountPrice !== cndy.state.price) {\n          if (cndy.state.tokenMint) {\n            var _cndy$state$whitelist;\n\n            setWhitelistPrice(((_cndy$state$whitelist = cndy.state.whitelistMintSettings.discountPrice) === null || _cndy$state$whitelist === void 0 ? void 0 : _cndy$state$whitelist.toNumber()) / divider);\n          } else {\n            var _cndy$state$whitelist2;\n\n            setWhitelistPrice(((_cndy$state$whitelist2 = cndy.state.whitelistMintSettings.discountPrice) === null || _cndy$state$whitelist2 === void 0 ? void 0 : _cndy$state$whitelist2.toNumber()) / LAMPORTS_PER_SOL);\n          }\n        }\n\n        let balance = 0;\n\n        try {\n          var _tokenBalance$value;\n\n          const tokenBalance = await props.connection.getTokenAccountBalance((await getAtaForMint(cndy.state.whitelistMintSettings.mint, wallet.publicKey))[0]);\n          balance = (tokenBalance === null || tokenBalance === void 0 ? void 0 : (_tokenBalance$value = tokenBalance.value) === null || _tokenBalance$value === void 0 ? void 0 : _tokenBalance$value.uiAmount) || 0;\n        } catch (e) {\n          console.error(e);\n          balance = 0;\n        }\n\n        setWhitelistTokenBalance(balance);\n        setIsActive(balance > 0);\n      } else {\n        setWhitelistEnabled(false);\n      }\n    })();\n  };\n\n  const renderCounter = _ref => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: days\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 53\n        }, this), \"Days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 89\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }, this), \"Hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 54\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 72\n        }, this), \"Mins\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 35\n        }, this), \"Secs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 88\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this);\n  };\n\n  function displaySuccess(mintPublicKey) {\n    let remaining = itemsRemaining - 1;\n    setItemsRemaining(remaining);\n    setIsSoldOut(remaining === 0);\n\n    if (whitelistTokenBalance && whitelistTokenBalance > 0) {\n      let balance = whitelistTokenBalance - 1;\n      setWhitelistTokenBalance(balance);\n      setIsActive(balance > 0);\n    }\n\n    setItemsRedeemed(itemsRedeemed + 1);\n    const solFeesEstimation = 0.012; // approx\n\n    if (!payWithSplToken && balance && balance > 0) {\n      setBalance(balance - (whitelistEnabled ? whitelistPrice : price) - solFeesEstimation);\n    }\n\n    setSolanaExplorerLink(cluster === \"devnet\" || cluster === \"testnet\" ? \"https://explorer.solana.com/address/\" + mintPublicKey + \"?cluster=\" + cluster : \"https://explorer.solana.com/address/\" + mintPublicKey);\n    throwConfetti();\n  }\n\n  ;\n\n  function throwConfetti() {\n    confetti({\n      particleCount: 400,\n      spread: 70,\n      origin: {\n        y: 0.6\n      }\n    });\n  }\n\n  const onMint = async () => {\n    try {\n      var _document$getElementB;\n\n      setIsMinting(true);\n      (_document$getElementB = document.getElementById('#identity')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n\n      if (wallet && candyMachine !== null && candyMachine !== void 0 && candyMachine.program && wallet.publicKey) {\n        var _status;\n\n        const mint = anchor.web3.Keypair.generate();\n        const mintTxId = (await mintOneToken(candyMachine, wallet.publicKey, mint))[0];\n        let status = {\n          err: true\n        };\n\n        if (mintTxId) {\n          status = await awaitTransactionSignatureConfirmation(mintTxId, props.txTimeout, props.connection, 'singleGossip', true);\n        }\n\n        if (!((_status = status) !== null && _status !== void 0 && _status.err)) {\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success'\n          }); // update front-end amounts\n\n          displaySuccess(mint.publicKey);\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error'\n          });\n        }\n      }\n    } catch (error) {\n      // TODO: blech:\n      let message = error.msg || 'Minting failed! Please try again!';\n\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction Timeout! Please try again.';\n        } else if (error.message.indexOf('0x138')) {} else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\"\n      });\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n  useEffect(refreshCandyMachineState, [wallet, props.candyMachineId, props.connection]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(MainContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WalletContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              src: \"logo.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Menu 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Menu 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Menu 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n          children: wallet ? /*#__PURE__*/_jsxDEV(WalletAmount, {\n            children: [(balance || 0).toLocaleString(), \" SOL\", /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(ConnectButton, {\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShimmerTitle, {\n        children: \"MINT IS LIVE !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MintContainer, {\n        children: [/*#__PURE__*/_jsxDEV(DesContainer, {\n          children: /*#__PURE__*/_jsxDEV(NFT, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"My NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Price, {\n                label: isActive && whitelistEnabled && whitelistTokenBalance > 0 ? whitelistPrice + \" \" + priceLabel : price + \" \" + priceLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Image, {\n                src: \"cool-cats.gif\",\n                alt: \"NFT To Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 169\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 29\n            }, this), wallet && isActive && whitelistEnabled && whitelistTokenBalance > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"You have \", whitelistTokenBalance, \" whitelist mint(s) remaining.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 31\n            }, this), wallet && isActive &&\n            /*#__PURE__*/\n\n            /* <p>Total Minted : {100 - (itemsRemaining * 100 / itemsAvailable)}%</p>}*/\n            _jsxDEV(\"h3\", {\n              children: [\"TOTAL MINTED : \", itemsRedeemed, \" / \", itemsAvailable]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 31\n            }, this), wallet && isActive && /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n              variant: \"determinate\",\n              value: 100 - itemsRemaining * 100 / itemsAvailable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MintButtonContainer, {\n              children: !isActive && candyMachine !== null && candyMachine !== void 0 && candyMachine.state.goLiveDate ? /*#__PURE__*/_jsxDEV(Countdown, {\n                date: toDate(candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.goLiveDate),\n                onMount: _ref2 => {\n                  let {\n                    completed\n                  } = _ref2;\n                  return completed && setIsActive(true);\n                },\n                onComplete: () => {\n                  setIsActive(true);\n                },\n                renderer: renderCounter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 37\n              }, this) : !wallet ? /*#__PURE__*/_jsxDEV(ConnectButton, {\n                children: \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 45\n              }, this) : candyMachine !== null && candyMachine !== void 0 && candyMachine.state.gatekeeper && wallet.publicKey && wallet.signTransaction ? /*#__PURE__*/_jsxDEV(GatewayProvider, {\n                wallet: {\n                  publicKey: wallet.publicKey || new PublicKey(CANDY_MACHINE_PROGRAM),\n                  //@ts-ignore\n                  signTransaction: wallet.signTransaction\n                } // // Replace with following when added\n                // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n                ,\n                gatekeeperNetwork: candyMachine === null || candyMachine === void 0 ? void 0 : (_candyMachine$state = candyMachine.state) === null || _candyMachine$state === void 0 ? void 0 : (_candyMachine$state$g = _candyMachine$state.gatekeeper) === null || _candyMachine$state$g === void 0 ? void 0 : _candyMachine$state$g.gatekeeperNetwork // This is the ignite (captcha) network\n                /// Don't need this for mainnet\n                ,\n                clusterUrl: rpcUrl,\n                options: {\n                  autoShowModal: false\n                },\n                children: /*#__PURE__*/_jsxDEV(MintButton, {\n                  candyMachine: candyMachine,\n                  isMinting: isMinting,\n                  isActive: isActive,\n                  isSoldOut: isSoldOut,\n                  onMint: onMint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(MintButton, {\n                candyMachine: candyMachine,\n                isMinting: isMinting,\n                isActive: isActive,\n                isSoldOut: isSoldOut,\n                onMint: onMint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 29\n            }, this), wallet && isActive && solanaExplorerLink && /*#__PURE__*/_jsxDEV(SolExplorerLink, {\n              href: solanaExplorerLink,\n              target: \"_blank\",\n              children: \"View on Solana Explorer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DesContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Des, {\n            elevation: 2,\n            children: [/*#__PURE__*/_jsxDEV(LogoAligner, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(GoldTitle, {\n                children: \"TITLE 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Des, {\n            elevation: 2,\n            children: [/*#__PURE__*/_jsxDEV(LogoAligner, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(GoldTitle, {\n                children: \"TITLE 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Des, {\n            elevation: 2,\n            children: [/*#__PURE__*/_jsxDEV(LogoAligner, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"logo.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(GoldTitle, {\n                children: \"TITLE 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alertState.open,\n      autoHideDuration: 6000,\n      onClose: () => setAlertState({ ...alertState,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setAlertState({ ...alertState,\n          open: false\n        }),\n        severity: alertState.severity,\n        children: alertState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"yLwtt0OQY52fsMYFcslQqxswUDY=\", false, function () {\n  return [useAnchorWallet];\n});\n\n_c21 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n\n$RefreshReg$(_c, \"WalletContainer\");\n$RefreshReg$(_c2, \"WalletAmount\");\n$RefreshReg$(_c3, \"Wallet\");\n$RefreshReg$(_c4, \"ConnectButton\");\n$RefreshReg$(_c5, \"NFT\");\n$RefreshReg$(_c6, \"Des\");\n$RefreshReg$(_c7, \"Card\");\n$RefreshReg$(_c8, \"MintButtonContainer\");\n$RefreshReg$(_c9, \"Logo\");\n$RefreshReg$(_c10, \"Menu\");\n$RefreshReg$(_c11, \"SolExplorerLink\");\n$RefreshReg$(_c12, \"MainContainer\");\n$RefreshReg$(_c13, \"MintContainer\");\n$RefreshReg$(_c14, \"DesContainer\");\n$RefreshReg$(_c15, \"Price\");\n$RefreshReg$(_c16, \"Image\");\n$RefreshReg$(_c17, \"BorderLinearProgress\");\n$RefreshReg$(_c18, \"ShimmerTitle\");\n$RefreshReg$(_c19, \"GoldTitle\");\n$RefreshReg$(_c20, \"LogoAligner\");\n$RefreshReg$(_c21, \"Home\");","map":{"version":3,"sources":["/home/ubuntu/Documents/A-Labs/Code Project/Web/candy-machine-v2-responsive-ui/src/Home.tsx"],"names":["useEffect","useState","styled","confetti","anchor","LAMPORTS_PER_SOL","PublicKey","useAnchorWallet","WalletMultiButton","GatewayProvider","Countdown","Snackbar","Paper","LinearProgress","Chip","Alert","toDate","getAtaForMint","MintButton","awaitTransactionSignatureConfirmation","getCandyMachineState","mintOneToken","CANDY_MACHINE_PROGRAM","cluster","process","env","REACT_APP_SOLANA_NETWORK","toString","decimals","REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS","splTokenName","REACT_APP_SPL_TOKEN_TO_MINT_NAME","WalletContainer","div","WalletAmount","Wallet","ul","ConnectButton","NFT","Des","Card","MintButtonContainer","Logo","Menu","SolExplorerLink","a","MainContainer","MintContainer","DesContainer","Price","Image","img","BorderLinearProgress","ShimmerTitle","h1","GoldTitle","h2","LogoAligner","Home","props","balance","setBalance","isMinting","setIsMinting","isActive","setIsActive","solanaExplorerLink","setSolanaExplorerLink","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","isSoldOut","setIsSoldOut","payWithSplToken","setPayWithSplToken","price","setPrice","priceLabel","setPriceLabel","whitelistPrice","setWhitelistPrice","whitelistEnabled","setWhitelistEnabled","whitelistTokenBalance","setWhitelistTokenBalance","alertState","setAlertState","open","message","severity","undefined","wallet","candyMachine","setCandyMachine","rpcUrl","rpcHost","refreshCandyMachineState","cndy","candyMachineId","connection","state","divider","Array","join","slice","tokenMint","toNumber","whitelistMintSettings","discountPrice","tokenBalance","getTokenAccountBalance","mint","publicKey","value","uiAmount","e","console","error","renderCounter","days","hours","minutes","seconds","displaySuccess","mintPublicKey","remaining","solFeesEstimation","throwConfetti","particleCount","spread","origin","y","onMint","document","getElementById","click","program","web3","Keypair","generate","mintTxId","status","err","txTimeout","msg","indexOf","code","getBalance","toLocaleString","goLiveDate","completed","gatekeeper","signTransaction","gatekeeperNetwork","autoShowModal"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,SAAQC,gBAAR,EAA0BC,SAA1B,QAA0C,iBAA1C;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,cAAzB,EAAyCC,IAAzC,QAAoD,mBAApD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAAQC,MAAR,EAA4BC,aAA5B,QAAgD,SAAhD;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAEIC,qCAFJ,EAGIC,oBAHJ,EAIIC,YAJJ,EAKIC,qBALJ,QAMO,iBANP;;AAQA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAZ,CAAsCC,QAAtC,EAAhB;AACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACC,GAAR,CAAYI,oCAAZ,GAAmD,CAACL,OAAO,CAACC,GAAR,CAAYI,oCAAZ,CAAkDF,QAAlD,EAApD,GAAmH,CAApI;AACA,MAAMG,YAAY,GAAGN,OAAO,CAACC,GAAR,CAAYM,gCAAZ,GAA+CP,OAAO,CAACC,GAAR,CAAYM,gCAAZ,CAA6CJ,QAA7C,EAA/C,GAAyG,OAA9H;AAEA,MAAMK,eAAe,GAAG9B,MAAM,CAAC+B,GAAI;AACnC;AACA;AACA;AACA;AACA,CALA;KAAMD,e;AAON,MAAME,YAAY,GAAGhC,MAAM,CAAC+B,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;MAAMC,Y;AA0BN,MAAMC,MAAM,GAAGjC,MAAM,CAACkC,EAAG;AACzB;AACA;AACA;AACA,CAJA;MAAMD,M;AAMN,MAAME,aAAa,GAAGnC,MAAM,CAACM,iBAAD,CAAoB;AAChD;AACA;AACA;AACA;AACA,CALA;MAAM6B,a;AAON,MAAMC,GAAG,GAAGpC,MAAM,CAACU,KAAD,CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;MAAM0B,G;AAON,MAAMC,GAAG,GAAGrC,MAAM,CAACoC,GAAD,CAAM;AACxB;AACA;AACA,CAHA;MAAMC,G;AAKN,MAAMC,IAAI,GAAGtC,MAAM,CAACU,KAAD,CAAQ;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAM4B,I;AAON,MAAMC,mBAAmB,GAAGvC,MAAM,CAAC+B,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;MAAMQ,mB;AAyBN,MAAMC,IAAI,GAAGxC,MAAM,CAAC+B,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;MAAMS,I;AAON,MAAMC,IAAI,GAAGzC,MAAM,CAACkC,EAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;OAAMO,I;AAiCN,MAAMC,eAAe,GAAG1C,MAAM,CAAC2C,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;OAAMD,e;AAgBN,MAAME,aAAa,GAAG5C,MAAM,CAAC+B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;OAAMa,a;AAWN,MAAMC,aAAa,GAAG7C,MAAM,CAAC+B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;OAAMc,a;AAQN,MAAMC,YAAY,GAAG9C,MAAM,CAAC+B,GAAI;AAChC;AACA;AACA;AACA;AACA,CALA;OAAMe,Y;AAON,MAAMC,KAAK,GAAG/C,MAAM,CAACY,IAAD,CAAO;AAC3B;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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport confetti from \"canvas-confetti\";\nimport * as anchor from \"@project-serum/anchor\";\nimport {LAMPORTS_PER_SOL, PublicKey} from \"@solana/web3.js\";\nimport {useAnchorWallet} from \"@solana/wallet-adapter-react\";\nimport {WalletMultiButton} from \"@solana/wallet-adapter-react-ui\";\nimport {GatewayProvider} from '@civic/solana-gateway-react';\nimport Countdown from \"react-countdown\";\nimport {Snackbar, Paper, LinearProgress, Chip} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {toDate, AlertState, getAtaForMint} from './utils';\nimport {MintButton} from './MintButton';\nimport {\n    CandyMachine,\n    awaitTransactionSignatureConfirmation,\n    getCandyMachineState,\n    mintOneToken,\n    CANDY_MACHINE_PROGRAM,\n} from \"./candy-machine\";\n\nconst cluster = process.env.REACT_APP_SOLANA_NETWORK!.toString();\nconst decimals = process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS ? +process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS!.toString() : 9;\nconst splTokenName = process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME ? process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME.toString() : \"TOKEN\";\n\nconst WalletContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst WalletAmount = styled.div`\n  color: black;\n  width: auto;\n  padding: 5px 5px 5px 16px;\n  min-width: 48px;\n  min-height: auto;\n  border-radius: 22px;\n  background-color: var(--main-text-color);\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\n  box-sizing: border-box;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  font-weight: 500;\n  line-height: 1.75;\n  text-transform: uppercase;\n  border: 0;\n  margin: 0;\n  display: inline-flex;\n  outline: 0;\n  position: relative;\n  align-items: center;\n  user-select: none;\n  vertical-align: middle;\n  justify-content: flex-start;\n  gap: 10px;\n`;\n\nconst Wallet = styled.ul`\n  flex: 0 0 auto;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ConnectButton = styled(WalletMultiButton)`\n  border-radius: 18px !important;\n  padding: 6px 16px;\n  background-color: #4E44CE;\n  margin: 0 auto;\n`;\n\nconst NFT = styled(Paper)`\n  min-width: 400px;\n  padding: 5px 20px 20px 20px;\n  flex: 1 1 auto;\n  background-color: var(--card-background-color) !important;\n\n`;\nconst Des = styled(NFT)`\n  text-align: left;\n  padding-top: 0px;\n`;\n\nconst Card = styled(Paper)`\n  display: inline-block;\n  background-color: var(--card-background-lighter-color) !important;\n  margin: 5px;\n  padding: 24px;\n`;\n\nconst MintButtonContainer = styled.div`\n  button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\n    color: #464646;\n  }\n\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\n    -webkit-animation: pulse 1s;\n    animation: pulse 1s;\n    box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\n  }\n\n  @-webkit-keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 #ef8f6e;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  flex: 0 0 auto;\n\n  img {\n    height: 60px;\n  }\n`;\nconst Menu = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  flex: 1 0 auto;\n\n  li {\n    margin: 0 12px;\n\n    a {\n      color: var(--main-text-color);\n      list-style-image: none;\n      list-style-position: outside;\n      list-style-type: none;\n      outline: none;\n      text-decoration: none;\n      text-size-adjust: 100%;\n      touch-action: manipulation;\n      transition: color 0.3s;\n      padding-bottom: 15px;\n\n      img {\n        max-height: 26px;\n      }\n    }\n\n    a:hover, a:active {\n      color: rgb(131, 146, 161);\n      border-bottom: 4px solid var(--title-text-color);\n    }\n\n  }\n`;\n\nconst SolExplorerLink = styled.a`\n  color: var(--title-text-color);\n  border-bottom: 1px solid var(--title-text-color);\n  font-weight: bold;\n  list-style-image: none;\n  list-style-position: outside;\n  list-style-type: none;\n  outline: none;\n  text-decoration: none;\n  text-size-adjust: 100%;\n\n  :hover {\n    border-bottom: 2px solid var(--title-text-color);\n  }\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-right: 4%;\n  margin-left: 4%;\n  text-align: center;\n  justify-content: center;\n`;\n\nconst MintContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst DesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 20px;\n`;\n\nconst Price = styled(Chip)`\n  position: absolute;\n  margin: 5px;\n  font-weight: bold;\n  font-size: 1em !important;\n`;\n\nconst Image = styled.img`\n  height: 400px;\n  width: auto;\n  border-radius: 7px;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n`;\n\nconst BorderLinearProgress = styled(LinearProgress)`\n  margin: 20px 0;\n  height: 10px !important;\n  border-radius: 30px;\n  border: 2px solid white;\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n  background-color:var(--main-text-color) !important;\n  \n  > div.MuiLinearProgress-barColorPrimary{\n    background-color:var(--title-text-color) !important;\n  }\n\n  > div.MuiLinearProgress-bar1Determinate {\n    border-radius: 30px !important;\n    background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\n  }\n`;\n\nconst ShimmerTitle = styled.h1`\n  margin: 50px auto;\n  text-transform: uppercase;\n  animation: glow 2s ease-in-out infinite alternate;\n  color: var(--main-text-color);\n  @keyframes glow {\n    from {\n      text-shadow: 0 0 20px var(--main-text-color);\n    }\n    to {\n      text-shadow: 0 0 30px var(--title-text-color), 0 0 10px var(--title-text-color);\n    }\n  }\n`;\n\nconst GoldTitle = styled.h2`\n  color: var(--title-text-color);\n`;\n\nconst LogoAligner = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    max-height: 35px;\n    margin-right: 10px;\n  }\n`;\n\nexport interface HomeProps {\n    candyMachineId: anchor.web3.PublicKey;\n    connection: anchor.web3.Connection;\n    txTimeout: number;\n    rpcHost: string;\n}\n\nconst Home = (props: HomeProps) => {\n    const [balance, setBalance] = useState<number>();\n    const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n    const [isActive, setIsActive] = useState(false); // true when countdown completes or whitelisted\n    const [solanaExplorerLink, setSolanaExplorerLink] = useState<string>(\"\");\n    const [itemsAvailable, setItemsAvailable] = useState(0);\n    const [itemsRedeemed, setItemsRedeemed] = useState(0);\n    const [itemsRemaining, setItemsRemaining] = useState(0);\n    const [isSoldOut, setIsSoldOut] = useState(false);\n    const [payWithSplToken, setPayWithSplToken] = useState(false);\n    const [price, setPrice] = useState(0);\n    const [priceLabel, setPriceLabel] = useState<string>(\"SOL\");\n    const [whitelistPrice, setWhitelistPrice] = useState(0);\n    const [whitelistEnabled, setWhitelistEnabled] = useState(false);\n    const [whitelistTokenBalance, setWhitelistTokenBalance] = useState(0);\n\n    const [alertState, setAlertState] = useState<AlertState>({\n        open: false,\n        message: \"\",\n        severity: undefined,\n    });\n\n    const wallet = useAnchorWallet();\n    const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n    const rpcUrl = props.rpcHost;\n\n    const refreshCandyMachineState = () => {\n        (async () => {\n            if (!wallet) return;\n\n            const cndy = await getCandyMachineState(\n                wallet as anchor.Wallet,\n                props.candyMachineId,\n                props.connection\n            );\n\n            setCandyMachine(cndy);\n            setItemsAvailable(cndy.state.itemsAvailable);\n            setItemsRemaining(cndy.state.itemsRemaining);\n            setItemsRedeemed(cndy.state.itemsRedeemed);\n\n            var divider = 1;\n            if (decimals) {\n                divider = +('1' + new Array(decimals).join('0').slice() + '0');\n            }\n\n            // detect if using spl-token to mint\n            if (cndy.state.tokenMint) {\n                setPayWithSplToken(true);\n                // Customize your SPL-TOKEN Label HERE\n                // TODO: get spl-token metadata name\n                setPriceLabel(splTokenName);\n                setPrice(cndy.state.price.toNumber() / divider);\n                setWhitelistPrice(cndy.state.price.toNumber() / divider);\n            }else {\n                setPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n                setWhitelistPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\n            }\n\n\n            // fetch whitelist token balance\n            if (cndy.state.whitelistMintSettings) {\n                setWhitelistEnabled(true);\n                if (cndy.state.whitelistMintSettings.discountPrice !== null && cndy.state.whitelistMintSettings.discountPrice !== cndy.state.price) {\n                    if (cndy.state.tokenMint) {\n                        setWhitelistPrice(cndy.state.whitelistMintSettings.discountPrice?.toNumber() / divider);\n                    } else {\n                        setWhitelistPrice(cndy.state.whitelistMintSettings.discountPrice?.toNumber() / LAMPORTS_PER_SOL);\n                    }\n                }\n                let balance = 0;\n                try {\n                    const tokenBalance =\n                        await props.connection.getTokenAccountBalance(\n                            (\n                                await getAtaForMint(\n                                    cndy.state.whitelistMintSettings.mint,\n                                    wallet.publicKey,\n                                )\n                            )[0],\n                        );\n\n                    balance = tokenBalance?.value?.uiAmount || 0;\n                } catch (e) {\n                    console.error(e);\n                    balance = 0;\n                }\n                setWhitelistTokenBalance(balance);\n                setIsActive(balance > 0);\n            } else {\n                setWhitelistEnabled(false);\n            }\n        })();\n    };\n\n    const renderCounter = ({days, hours, minutes, seconds}: any) => {\n        return (\n            <div><Card elevation={1}><h1>{days}</h1><br/>Days</Card><Card elevation={1}><h1>{hours}</h1>\n                <br/>Hours</Card><Card elevation={1}><h1>{minutes}</h1><br/>Mins</Card><Card elevation={1}>\n                <h1>{seconds}</h1><br/>Secs</Card></div>\n        );\n    };\n\n    function displaySuccess(mintPublicKey: any): void {\n        let remaining = itemsRemaining - 1;\n        setItemsRemaining(remaining);\n        setIsSoldOut(remaining === 0);\n        if (whitelistTokenBalance && whitelistTokenBalance > 0) {\n            let balance = whitelistTokenBalance - 1;\n            setWhitelistTokenBalance(balance);\n            setIsActive(balance > 0);\n        }\n        setItemsRedeemed(itemsRedeemed + 1);\n        const solFeesEstimation = 0.012; // approx\n        if (!payWithSplToken && balance && balance > 0) {\n            setBalance(balance - (whitelistEnabled ? whitelistPrice : price) - solFeesEstimation);\n        }\n        setSolanaExplorerLink(cluster === \"devnet\" || cluster === \"testnet\"\n            ? (\"https://explorer.solana.com/address/\" + mintPublicKey + \"?cluster=\" + cluster)\n            : (\"https://explorer.solana.com/address/\" + mintPublicKey));\n        throwConfetti();\n    };\n\n    function throwConfetti(): void {\n        confetti({\n            particleCount: 400,\n            spread: 70,\n            origin: {y: 0.6},\n        });\n    }\n\n    const onMint = async () => {\n        try {\n            setIsMinting(true);\n            document.getElementById('#identity')?.click();\n            if (wallet && candyMachine?.program && wallet.publicKey) {\n                const mint = anchor.web3.Keypair.generate();\n                const mintTxId = (\n                    await mintOneToken(candyMachine, wallet.publicKey, mint)\n                )[0];\n\n                let status: any = {err: true};\n                if (mintTxId) {\n                    status = await awaitTransactionSignatureConfirmation(\n                        mintTxId,\n                        props.txTimeout,\n                        props.connection,\n                        'singleGossip',\n                        true,\n                    );\n                }\n\n                if (!status?.err) {\n                    setAlertState({\n                        open: true,\n                        message: 'Congratulations! Mint succeeded!',\n                        severity: 'success',\n                    });\n\n                    // update front-end amounts\n                    displaySuccess(mint.publicKey);\n                } else {\n                    setAlertState({\n                        open: true,\n                        message: 'Mint failed! Please try again!',\n                        severity: 'error',\n                    });\n                }\n            }\n        } catch (error: any) {\n            // TODO: blech:\n            let message = error.msg || 'Minting failed! Please try again!';\n            if (!error.msg) {\n                if (!error.message) {\n                    message = 'Transaction Timeout! Please try again.';\n                } else if (error.message.indexOf('0x138')) {\n                } else if (error.message.indexOf('0x137')) {\n                    message = `SOLD OUT!`;\n                } else if (error.message.indexOf('0x135')) {\n                    message = `Insufficient funds to mint. Please fund your wallet.`;\n                }\n            } else {\n                if (error.code === 311) {\n                    message = `SOLD OUT!`;\n                } else if (error.code === 312) {\n                    message = `Minting period hasn't started yet.`;\n                }\n            }\n\n            setAlertState({\n                open: true,\n                message,\n                severity: \"error\",\n            });\n        } finally {\n            setIsMinting(false);\n        }\n    };\n\n\n    useEffect(() => {\n        (async () => {\n            if (wallet) {\n                const balance = await props.connection.getBalance(wallet.publicKey);\n                setBalance(balance / LAMPORTS_PER_SOL);\n            }\n        })();\n    }, [wallet, props.connection]);\n\n    useEffect(refreshCandyMachineState, [\n        wallet,\n        props.candyMachineId,\n        props.connection,\n    ]);\n\n    return (\n        <main>\n            <MainContainer>\n                <WalletContainer>\n                    <Logo><a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"\"\n                                                                                                          src=\"logo.png\"/></a></Logo>\n                    <Menu>\n                        <li><a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">Menu 1</a>\n                        </li>\n                        <li><a href=\"http://localhost:3000/\" target=\"_blank\"\n                               rel=\"noopener noreferrer\">Menu 2</a></li>\n                        <li><a href=\"http://localhost:3000/\" target=\"_blank\"\n                               rel=\"noopener noreferrer\">Menu 3</a></li>\n                    </Menu>\n                    <Wallet>\n                        {wallet ?\n                            <WalletAmount>{(balance || 0).toLocaleString()} SOL<ConnectButton/></WalletAmount> :\n                            <ConnectButton>Connect Wallet</ConnectButton>}\n                    </Wallet>\n                </WalletContainer>\n                <ShimmerTitle>MINT IS LIVE !</ShimmerTitle>\n                <br/>\n\n\n                <MintContainer>\n                    <DesContainer>\n                        <NFT elevation={3}>\n                            <h2>My NFT</h2>\n                            <br/>\n                            <div><Price\n                                label={isActive && whitelistEnabled && (whitelistTokenBalance > 0) ? (whitelistPrice + \" \" + priceLabel) : (price + \" \" + priceLabel)}/><Image\n                                src=\"cool-cats.gif\"\n                                alt=\"NFT To Mint\"/></div>\n                            <br/>\n                            {wallet && isActive && whitelistEnabled && (whitelistTokenBalance > 0) &&\n                              <h3>You have {whitelistTokenBalance} whitelist mint(s) remaining.</h3>}\n                            {wallet && isActive &&\n                                /* <p>Total Minted : {100 - (itemsRemaining * 100 / itemsAvailable)}%</p>}*/\n                              <h3>TOTAL MINTED : {itemsRedeemed} / {itemsAvailable}</h3>}\n                            {wallet && isActive && <BorderLinearProgress variant=\"determinate\"\n                                                                         value={100 - (itemsRemaining * 100 / itemsAvailable)}/>}\n                            <br/>\n                            <MintButtonContainer>\n                                {!isActive && candyMachine?.state.goLiveDate ? (\n                                    <Countdown\n                                        date={toDate(candyMachine?.state.goLiveDate)}\n                                        onMount={({completed}) => completed && setIsActive(true)}\n                                        onComplete={() => {\n                                            setIsActive(true);\n                                        }}\n                                        renderer={renderCounter}\n                                    />) : (\n                                    !wallet ? (\n                                            <ConnectButton>Connect Wallet</ConnectButton>\n                                        ) :\n                                        candyMachine?.state.gatekeeper &&\n                                        wallet.publicKey &&\n                                        wallet.signTransaction ? (\n                                            <GatewayProvider\n                                                wallet={{\n                                                    publicKey:\n                                                        wallet.publicKey ||\n                                                        new PublicKey(CANDY_MACHINE_PROGRAM),\n                                                    //@ts-ignore\n                                                    signTransaction: wallet.signTransaction,\n                                                }}\n                                                // // Replace with following when added\n                                                // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n                                                gatekeeperNetwork={\n                                                    candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                                                } // This is the ignite (captcha) network\n                                                /// Don't need this for mainnet\n                                                clusterUrl={rpcUrl}\n                                                options={{autoShowModal: false}}\n                                            >\n                                                <MintButton\n                                                    candyMachine={candyMachine}\n                                                    isMinting={isMinting}\n                                                    isActive={isActive}\n                                                    isSoldOut={isSoldOut}\n                                                    onMint={onMint}\n                                                />\n                                            </GatewayProvider>\n                                        ) : (\n                                            <MintButton\n                                                candyMachine={candyMachine}\n                                                isMinting={isMinting}\n                                                isActive={isActive}\n                                                isSoldOut={isSoldOut}\n                                                onMint={onMint}\n                                            />\n                                        ))}\n                            </MintButtonContainer>\n                            <br/>\n                            {wallet && isActive && solanaExplorerLink &&\n                              <SolExplorerLink href={solanaExplorerLink} target=\"_blank\">View on Solana\n                                Explorer</SolExplorerLink>}\n                        </NFT>\n                    </DesContainer>\n                    <DesContainer>\n                        <Des elevation={2}>\n                            <LogoAligner><img src=\"logo.png\" alt=\"\"></img><GoldTitle>TITLE 1</GoldTitle></LogoAligner>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                        </Des>\n                        <Des elevation={2}>\n                            <LogoAligner><img src=\"logo.png\" alt=\"\"></img><GoldTitle>TITLE 2</GoldTitle></LogoAligner>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                        </Des>\n                        <Des elevation={2}>\n                            <LogoAligner><img src=\"logo.png\" alt=\"\"></img><GoldTitle>TITLE 3</GoldTitle></LogoAligner>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                incididunt.</p>\n                        </Des>\n                    </DesContainer>\n                </MintContainer>\n            </MainContainer>\n            <Snackbar\n                open={alertState.open}\n                autoHideDuration={6000}\n                onClose={() => setAlertState({...alertState, open: false})}\n            >\n                <Alert\n                    onClose={() => setAlertState({...alertState, open: false})}\n                    severity={alertState.severity}\n                >\n                    {alertState.message}\n                </Alert>\n            </Snackbar>\n        </main>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}